from entities import Enemy
##different shaped hitboxes

class Circle:
    ##a circular hitbox
    
    def __init__(self, posx, posy, rad):
        self.posx = posx
        self.posy = posy
        self.rad = rad
        
    def detect(self, sh):
        #returns true if colliding with shape, false if not

        #detects if circle collides with circle
        if self.rad + Enemy.rad > ((self.posx + self.posy)**2 + (Enemy.posx + Enemy.posy)**2)**0.5:
            self.sh = True
        elif self.rad + Enemy.rad < ((self.posx + self.posy)**2 + (Enemy.posx + Enemy.posy)**2)**0.5:
            self.sh = False

        #detects if circle collides with rectangle
        
        
    def update(self, x, y):
        #updates position
        pass
        
        
        



class Rectangle:
    ##a rectanglar hitbox
    ##should always be stationary, update not required
    
    def __init__(self, posx, posy, lenx, leny):
        pass
        
